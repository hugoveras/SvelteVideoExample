// source: registration.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.registration.Empty', null, global);
goog.exportSymbol('proto.registration.InsertUserRegistration', null, global);
goog.exportSymbol('proto.registration.ReqUserRegistration', null, global);
goog.exportSymbol('proto.registration.UserRegistrationProfile', null, global);
goog.exportSymbol('proto.registration.UserType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registration.Empty = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registration.Empty, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registration.Empty.displayName = 'proto.registration.Empty';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registration.ReqUserRegistration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.registration.ReqUserRegistration.repeatedFields_, null);
};
goog.inherits(proto.registration.ReqUserRegistration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registration.ReqUserRegistration.displayName = 'proto.registration.ReqUserRegistration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registration.InsertUserRegistration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.registration.InsertUserRegistration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registration.InsertUserRegistration.displayName = 'proto.registration.InsertUserRegistration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.registration.UserRegistrationProfile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.registration.UserRegistrationProfile.repeatedFields_, null);
};
goog.inherits(proto.registration.UserRegistrationProfile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.registration.UserRegistrationProfile.displayName = 'proto.registration.UserRegistrationProfile';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registration.Empty.prototype.toObject = function(opt_includeInstance) {
  return proto.registration.Empty.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registration.Empty} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registration.Empty.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registration.Empty}
 */
proto.registration.Empty.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registration.Empty;
  return proto.registration.Empty.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registration.Empty} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registration.Empty}
 */
proto.registration.Empty.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registration.Empty.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registration.Empty.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registration.Empty} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registration.Empty.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.registration.ReqUserRegistration.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registration.ReqUserRegistration.prototype.toObject = function(opt_includeInstance) {
  return proto.registration.ReqUserRegistration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registration.ReqUserRegistration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registration.ReqUserRegistration.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, ""),
    status: jspb.Message.getFieldWithDefault(msg, 3, ""),
    createdate: jspb.Message.getFieldWithDefault(msg, 4, ""),
    updatedate: jspb.Message.getFieldWithDefault(msg, 5, ""),
    statusdate: jspb.Message.getFieldWithDefault(msg, 6, ""),
    usertype: jspb.Message.getFieldWithDefault(msg, 7, 0),
    firstname: jspb.Message.getFieldWithDefault(msg, 8, ""),
    lastname: jspb.Message.getFieldWithDefault(msg, 9, ""),
    customersList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registration.ReqUserRegistration}
 */
proto.registration.ReqUserRegistration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registration.ReqUserRegistration;
  return proto.registration.ReqUserRegistration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registration.ReqUserRegistration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registration.ReqUserRegistration}
 */
proto.registration.ReqUserRegistration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedate(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedate(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatusdate(value);
      break;
    case 7:
      var value = /** @type {!proto.registration.UserType} */ (reader.readEnum());
      msg.setUsertype(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstname(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastname(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addCustomers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registration.ReqUserRegistration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registration.ReqUserRegistration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registration.ReqUserRegistration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registration.ReqUserRegistration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCreatedate();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUpdatedate();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStatusdate();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUsertype();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getFirstname();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getLastname();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCustomersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
};


/**
 * optional string Email = 1;
 * @return {string}
 */
proto.registration.ReqUserRegistration.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.registration.ReqUserRegistration} returns this
 */
proto.registration.ReqUserRegistration.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Password = 2;
 * @return {string}
 */
proto.registration.ReqUserRegistration.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.registration.ReqUserRegistration} returns this
 */
proto.registration.ReqUserRegistration.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Status = 3;
 * @return {string}
 */
proto.registration.ReqUserRegistration.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.registration.ReqUserRegistration} returns this
 */
proto.registration.ReqUserRegistration.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string CreateDate = 4;
 * @return {string}
 */
proto.registration.ReqUserRegistration.prototype.getCreatedate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.registration.ReqUserRegistration} returns this
 */
proto.registration.ReqUserRegistration.prototype.setCreatedate = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string UpdateDate = 5;
 * @return {string}
 */
proto.registration.ReqUserRegistration.prototype.getUpdatedate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.registration.ReqUserRegistration} returns this
 */
proto.registration.ReqUserRegistration.prototype.setUpdatedate = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string StatusDate = 6;
 * @return {string}
 */
proto.registration.ReqUserRegistration.prototype.getStatusdate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.registration.ReqUserRegistration} returns this
 */
proto.registration.ReqUserRegistration.prototype.setStatusdate = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional UserType UserType = 7;
 * @return {!proto.registration.UserType}
 */
proto.registration.ReqUserRegistration.prototype.getUsertype = function() {
  return /** @type {!proto.registration.UserType} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.registration.UserType} value
 * @return {!proto.registration.ReqUserRegistration} returns this
 */
proto.registration.ReqUserRegistration.prototype.setUsertype = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional string FirstName = 8;
 * @return {string}
 */
proto.registration.ReqUserRegistration.prototype.getFirstname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.registration.ReqUserRegistration} returns this
 */
proto.registration.ReqUserRegistration.prototype.setFirstname = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string LastName = 9;
 * @return {string}
 */
proto.registration.ReqUserRegistration.prototype.getLastname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.registration.ReqUserRegistration} returns this
 */
proto.registration.ReqUserRegistration.prototype.setLastname = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * repeated string Customers = 10;
 * @return {!Array<string>}
 */
proto.registration.ReqUserRegistration.prototype.getCustomersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.registration.ReqUserRegistration} returns this
 */
proto.registration.ReqUserRegistration.prototype.setCustomersList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.registration.ReqUserRegistration} returns this
 */
proto.registration.ReqUserRegistration.prototype.addCustomers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.registration.ReqUserRegistration} returns this
 */
proto.registration.ReqUserRegistration.prototype.clearCustomersList = function() {
  return this.setCustomersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registration.InsertUserRegistration.prototype.toObject = function(opt_includeInstance) {
  return proto.registration.InsertUserRegistration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registration.InsertUserRegistration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registration.InsertUserRegistration.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userregistration: (f = msg.getUserregistration()) && proto.registration.ReqUserRegistration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registration.InsertUserRegistration}
 */
proto.registration.InsertUserRegistration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registration.InsertUserRegistration;
  return proto.registration.InsertUserRegistration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registration.InsertUserRegistration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registration.InsertUserRegistration}
 */
proto.registration.InsertUserRegistration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.registration.ReqUserRegistration;
      reader.readMessage(value,proto.registration.ReqUserRegistration.deserializeBinaryFromReader);
      msg.setUserregistration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registration.InsertUserRegistration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registration.InsertUserRegistration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registration.InsertUserRegistration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registration.InsertUserRegistration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserregistration();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.registration.ReqUserRegistration.serializeBinaryToWriter
    );
  }
};


/**
 * optional string Id = 1;
 * @return {string}
 */
proto.registration.InsertUserRegistration.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.registration.InsertUserRegistration} returns this
 */
proto.registration.InsertUserRegistration.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ReqUserRegistration userregistration = 2;
 * @return {?proto.registration.ReqUserRegistration}
 */
proto.registration.InsertUserRegistration.prototype.getUserregistration = function() {
  return /** @type{?proto.registration.ReqUserRegistration} */ (
    jspb.Message.getWrapperField(this, proto.registration.ReqUserRegistration, 2));
};


/**
 * @param {?proto.registration.ReqUserRegistration|undefined} value
 * @return {!proto.registration.InsertUserRegistration} returns this
*/
proto.registration.InsertUserRegistration.prototype.setUserregistration = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.registration.InsertUserRegistration} returns this
 */
proto.registration.InsertUserRegistration.prototype.clearUserregistration = function() {
  return this.setUserregistration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.registration.InsertUserRegistration.prototype.hasUserregistration = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.registration.UserRegistrationProfile.repeatedFields_ = [11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.registration.UserRegistrationProfile.prototype.toObject = function(opt_includeInstance) {
  return proto.registration.UserRegistrationProfile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.registration.UserRegistrationProfile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registration.UserRegistrationProfile.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    email: jspb.Message.getFieldWithDefault(msg, 2, ""),
    status: jspb.Message.getFieldWithDefault(msg, 4, ""),
    createdate: jspb.Message.getFieldWithDefault(msg, 5, ""),
    updatedate: jspb.Message.getFieldWithDefault(msg, 6, ""),
    statusdate: jspb.Message.getFieldWithDefault(msg, 7, ""),
    usertype: jspb.Message.getFieldWithDefault(msg, 8, 0),
    firstname: jspb.Message.getFieldWithDefault(msg, 9, ""),
    lastname: jspb.Message.getFieldWithDefault(msg, 10, ""),
    customersList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.registration.UserRegistrationProfile}
 */
proto.registration.UserRegistrationProfile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.registration.UserRegistrationProfile;
  return proto.registration.UserRegistrationProfile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.registration.UserRegistrationProfile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.registration.UserRegistrationProfile}
 */
proto.registration.UserRegistrationProfile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedate(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedate(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatusdate(value);
      break;
    case 8:
      var value = /** @type {!proto.registration.UserType} */ (reader.readEnum());
      msg.setUsertype(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstname(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastname(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addCustomers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.registration.UserRegistrationProfile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.registration.UserRegistrationProfile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.registration.UserRegistrationProfile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.registration.UserRegistrationProfile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCreatedate();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUpdatedate();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getStatusdate();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getUsertype();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getFirstname();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getLastname();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getCustomersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
};


/**
 * optional string Id = 1;
 * @return {string}
 */
proto.registration.UserRegistrationProfile.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.registration.UserRegistrationProfile} returns this
 */
proto.registration.UserRegistrationProfile.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Email = 2;
 * @return {string}
 */
proto.registration.UserRegistrationProfile.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.registration.UserRegistrationProfile} returns this
 */
proto.registration.UserRegistrationProfile.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Status = 4;
 * @return {string}
 */
proto.registration.UserRegistrationProfile.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.registration.UserRegistrationProfile} returns this
 */
proto.registration.UserRegistrationProfile.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string CreateDate = 5;
 * @return {string}
 */
proto.registration.UserRegistrationProfile.prototype.getCreatedate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.registration.UserRegistrationProfile} returns this
 */
proto.registration.UserRegistrationProfile.prototype.setCreatedate = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string UpdateDate = 6;
 * @return {string}
 */
proto.registration.UserRegistrationProfile.prototype.getUpdatedate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.registration.UserRegistrationProfile} returns this
 */
proto.registration.UserRegistrationProfile.prototype.setUpdatedate = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string StatusDate = 7;
 * @return {string}
 */
proto.registration.UserRegistrationProfile.prototype.getStatusdate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.registration.UserRegistrationProfile} returns this
 */
proto.registration.UserRegistrationProfile.prototype.setStatusdate = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional UserType UserType = 8;
 * @return {!proto.registration.UserType}
 */
proto.registration.UserRegistrationProfile.prototype.getUsertype = function() {
  return /** @type {!proto.registration.UserType} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.registration.UserType} value
 * @return {!proto.registration.UserRegistrationProfile} returns this
 */
proto.registration.UserRegistrationProfile.prototype.setUsertype = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional string FirstName = 9;
 * @return {string}
 */
proto.registration.UserRegistrationProfile.prototype.getFirstname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.registration.UserRegistrationProfile} returns this
 */
proto.registration.UserRegistrationProfile.prototype.setFirstname = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string LastName = 10;
 * @return {string}
 */
proto.registration.UserRegistrationProfile.prototype.getLastname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.registration.UserRegistrationProfile} returns this
 */
proto.registration.UserRegistrationProfile.prototype.setLastname = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * repeated string Customers = 11;
 * @return {!Array<string>}
 */
proto.registration.UserRegistrationProfile.prototype.getCustomersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.registration.UserRegistrationProfile} returns this
 */
proto.registration.UserRegistrationProfile.prototype.setCustomersList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.registration.UserRegistrationProfile} returns this
 */
proto.registration.UserRegistrationProfile.prototype.addCustomers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.registration.UserRegistrationProfile} returns this
 */
proto.registration.UserRegistrationProfile.prototype.clearCustomersList = function() {
  return this.setCustomersList([]);
};


/**
 * @enum {number}
 */
proto.registration.UserType = {
  ADMINISTRATOR: 0,
  ANALYST: 1
};

goog.object.extend(exports, proto.registration);
